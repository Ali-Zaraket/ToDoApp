{"version":3,"sources":["homepage.js","App.js","index.js"],"names":["HomePage","props","state","list","task","id","description","done","handleAddButtonClick","bind","fetchTasks","renderTask","handleInputChange","handleDeleteButton","handleCheckBoxChange","renderDeleteAll","getCompleted","this","completed","map","fetch","then","response","json","data","setState","requestOptions","method","headers","body","JSON","stringify","e","checked","target","pk","index","className","value","onChange","type","style","flex","onClick","url","align","placeholder","required","length","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51ccd215.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nexport default class HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [],\r\n            task: {\r\n                id: null,\r\n                description: '',\r\n                done: false,\r\n            },\r\n        };\r\n\r\n        this.handleAddButtonClick = this.handleAddButtonClick.bind(this);\r\n        this.fetchTasks = this.fetchTasks.bind(this);\r\n        this.renderTask = this.renderTask.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleDeleteButton = this.handleDeleteButton.bind(this);\r\n        this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\r\n        this.renderDeleteAll = this.renderDeleteAll.bind(this);\r\n        this.getCompleted = this.getCompleted.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.fetchTasks();\r\n    }\r\n    getCompleted(list){\r\n        var completed = 0;\r\n        list.map((task) => {\r\n            if(task.done){\r\n                completed++;\r\n            }\r\n        })\r\n        return completed;\r\n    }\r\n\r\n    fetchTasks(){\r\n        var url = \"http://localhost:8000/api/tasks\";\r\n\r\n        fetch(url).then(response => response.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                list: data,\r\n            });\r\n        });\r\n    }\r\n\r\n    handleAddButtonClick() {\r\n        var url = \"http://localhost:8000/api/create-task\";\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                description: this.state.task.description,\r\n            })\r\n        };\r\n\r\n        fetch(url, requestOptions)\r\n        .then((response) => response.json())\r\n        .then(() => {\r\n            this.fetchTasks();\r\n            this.setState({\r\n                task: {\r\n                    id: null,\r\n                    description: '',\r\n                    done: false,\r\n                },\r\n            });\r\n        });\r\n    }\r\n\r\n    handleCheckBoxChange(e, task){\r\n        var checked = e.target.checked;\r\n\r\n        var url = \"http://localhost:8000/api/done-task\";\r\n        var requestOptions = {\r\n            method: 'PATCH',\r\n            headers: { \"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({\r\n                pk: task.id,\r\n                done: checked,\r\n            })\r\n        };\r\n        fetch(url, requestOptions)\r\n        .then((response) => response.json())\r\n        .then(() => {\r\n            this.fetchTasks();\r\n        });\r\n    }\r\n\r\n    renderTask(task, index, done=null) {\r\n        if(done) {\r\n            return(\r\n                <div key={index} className=\"task-wrapper flex-wrapper\" id=\"slide\">\r\n                    <div className=\"checkbox\">\r\n                        <input className=\"form-check-input\" value=\"\" checked={task.done} onChange={(e) => this.handleCheckBoxChange(e, task)} type=\"checkbox\" id=\"checkboxNoLabel\" value=\"\" aria-label=\"...\" />\r\n                    </div>\r\n                    <div style={{flex:7}}>\r\n                        <span>{task.description}</span>\r\n                    </div>\r\n                    <div style={{flex:1}}>\r\n                        <button className=\"btn btn-danger\" onClick={() => this.handleDeleteButton(task)}>delete</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleInputChange(e){\r\n        var description = e.target.value;\r\n        this.setState({\r\n            task: {\r\n                ...this.state.task,\r\n                description: description,\r\n            }\r\n        });\r\n    }\r\n\r\n    handleDeleteButton(task){\r\n        var url = \"http://localhost:8000/api/delete-task?pk=\" + task.id;\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                pk: task.id,\r\n            })\r\n        };\r\n        fetch(url, requestOptions)\r\n        .then((response) => response.json())\r\n        .then(() => this.fetchTasks());\r\n    }\r\n\r\n    renderDeleteAll(){\r\n        return(\r\n            <div className=\"pt-5 pb-4 row\" id=\"slide\">\r\n                <button type=\"submit\" className=\"btn btn-outline-danger\" onClick={() => {\r\n                    this.state.list.map((task) => this.handleDeleteButton(task))\r\n                }}>\r\n                    Delete All List\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"pt-5\">\r\n                    <legend className=\"display-1 text-info\" align=\"center\">TO DO</legend>\r\n                </div>\r\n                <div className=\"row pt-4\">\r\n                    <div className=\"col-9\">\r\n                        <input type=\"text\" onChange={this.handleInputChange} value={this.state.task.description} className=\"form-control\" placeholder=\"Add a task..\" required/>\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n                        <button type=\"submit\" className=\"btn btn-info\" onClick={this.handleAddButtonClick}>\r\n                            Add\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"list-box border-bottom border-secondary border-2 pb-5\">\r\n                    {this.state.list.map((task, index, done) => this.renderTask(task, index, done=!task.done))}\r\n                </div>\r\n                {this.state.list.length > 0 ?\r\n                    <legend className=\"text-secondary display-6\" align=\"center\">DONE ({this.getCompleted(this.state.list)})</legend>\r\n                    : null\r\n                }\r\n                <div className=\"list-box\">\r\n                    {this.state.list.map((task, index, done) => this.renderTask(task, index, done=task.done))}\r\n                </div>\r\n                {this.state.list.length > 1 ? this.renderDeleteAll() : null}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport HomePage from './homepage';\nimport './App.css'; \n\nexport default class App extends Component {\n  render() {\n    return (<div className=\"App-header\"><HomePage /></div>);\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}